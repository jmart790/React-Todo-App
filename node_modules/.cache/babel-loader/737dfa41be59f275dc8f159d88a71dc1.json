{"ast":null,"code":"import _defineProperty from \"/Users/josh/Desktop/wyncode/c34/react-todo-app/React-Todo-App/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/josh/Desktop/wyncode/c34/react-todo-app/React-Todo-App/src/App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport Navbar from './components/navbar';\nimport NewTodo from './components/newTodo';\nimport TodoList from './components/todoList';\nimport './styles/app.css';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todos: [],\n      countText: '0 items left'\n    };\n\n    this.handleCount = () => {\n      const count = this.state.todos.filter(todo => !todo.completed).length;\n      const plural = count === 1 ? 'item' : 'items';\n      const countText = \"\".concat(count, \" \").concat(plural, \" left\");\n      this.setState({\n        countText\n      });\n    };\n\n    this.handleDelete = todoId => {\n      const todos = [...this.state.todos];\n      todos.splice(todoId, 1);\n      this.setState({\n        todos\n      }, this.handleCount);\n    };\n\n    this.handleCompleted = todoId => {\n      const todos = this.state.todos.map((todo, index) => index === todoId ? _objectSpread({}, todo, {\n        completed: !todo.completed\n      }) : todo);\n      this.setState({\n        todos\n      }, this.handleCount);\n    };\n\n    this.handleNewTodo = todo => {\n      const todos = [...this.state.todos, todo];\n      this.setState({\n        todos\n      }, this.handleCount);\n    };\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      countText: this.state.countText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(NewTodo, {\n      onNewTodo: this.handleNewTodo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(TodoList, {\n      todoList: this.state.todos,\n      onCompleted: this.handleCompleted,\n      onDelete: this.handleDelete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/josh/Desktop/wyncode/c34/react-todo-app/React-Todo-App/src/App.js"],"names":["React","Navbar","NewTodo","TodoList","App","Component","state","todos","countText","handleCount","count","filter","todo","completed","length","plural","setState","handleDelete","todoId","splice","handleCompleted","map","index","handleNewTodo","render"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAO,kBAAP;;AAEA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,SAAS,EAAE;AAFL,KADwB;;AAAA,SAMhCC,WANgC,GAMlB,MAAM;AAClB,YAAMC,KAAK,GAAG,KAAKJ,KAAL,CAAWC,KAAX,CAAiBI,MAAjB,CAAwBC,IAAI,IAAI,CAACA,IAAI,CAACC,SAAtC,EAAiDC,MAA/D;AACA,YAAMC,MAAM,GAAGL,KAAK,KAAK,CAAV,GAAc,MAAd,GAAuB,OAAtC;AACA,YAAMF,SAAS,aAAME,KAAN,cAAeK,MAAf,UAAf;AACA,WAAKC,QAAL,CAAc;AAAER,QAAAA;AAAF,OAAd;AACD,KAX+B;;AAAA,SAahCS,YAbgC,GAajBC,MAAM,IAAI;AACvB,YAAMX,KAAK,GAAG,CAAC,GAAG,KAAKD,KAAL,CAAWC,KAAf,CAAd;AACAA,MAAAA,KAAK,CAACY,MAAN,CAAaD,MAAb,EAAqB,CAArB;AACA,WAAKF,QAAL,CAAc;AAAET,QAAAA;AAAF,OAAd,EAAyB,KAAKE,WAA9B;AACD,KAjB+B;;AAAA,SAmBhCW,eAnBgC,GAmBdF,MAAM,IAAI;AAC1B,YAAMX,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAX,CAAiBc,GAAjB,CAAqB,CAACT,IAAD,EAAOU,KAAP,KACjCA,KAAK,KAAKJ,MAAV,qBAAwBN,IAAxB;AAA8BC,QAAAA,SAAS,EAAE,CAACD,IAAI,CAACC;AAA/C,WAA6DD,IADjD,CAAd;AAGA,WAAKI,QAAL,CAAc;AAAET,QAAAA;AAAF,OAAd,EAAyB,KAAKE,WAA9B;AACD,KAxB+B;;AAAA,SA0BhCc,aA1BgC,GA0BhBX,IAAI,IAAI;AACtB,YAAML,KAAK,GAAG,CAAC,GAAG,KAAKD,KAAL,CAAWC,KAAf,EAAsBK,IAAtB,CAAd;AACA,WAAKI,QAAL,CAAc;AAAET,QAAAA;AAAF,OAAd,EAAyB,KAAKE,WAA9B;AACD,KA7B+B;AAAA;;AA+BhCe,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAE,KAAKlB,KAAL,CAAWE,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAE,KAAKe,aAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,QAAD;AACE,MAAA,QAAQ,EAAE,KAAKjB,KAAL,CAAWC,KADvB;AAEE,MAAA,WAAW,EAAE,KAAKa,eAFpB;AAGE,MAAA,QAAQ,EAAE,KAAKH,YAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF;AAWD;;AA3C+B;;AA6ClC,eAAeb,GAAf","sourcesContent":["import React from 'react'\nimport Navbar from './components/navbar'\nimport NewTodo from './components/newTodo'\nimport TodoList from './components/todoList'\nimport './styles/app.css'\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    countText: '0 items left'\n  }\n\n  handleCount = () => {\n    const count = this.state.todos.filter(todo => !todo.completed).length\n    const plural = count === 1 ? 'item' : 'items'\n    const countText = `${count} ${plural} left`\n    this.setState({ countText })\n  }\n\n  handleDelete = todoId => {\n    const todos = [...this.state.todos]\n    todos.splice(todoId, 1)\n    this.setState({ todos }, this.handleCount)\n  }\n\n  handleCompleted = todoId => {\n    const todos = this.state.todos.map((todo, index) =>\n      index === todoId ? { ...todo, completed: !todo.completed } : todo\n    )\n    this.setState({ todos }, this.handleCount)\n  }\n\n  handleNewTodo = todo => {\n    const todos = [...this.state.todos, todo]\n    this.setState({ todos }, this.handleCount)\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Navbar countText={this.state.countText} />\n        <NewTodo onNewTodo={this.handleNewTodo} />\n        <TodoList\n          todoList={this.state.todos}\n          onCompleted={this.handleCompleted}\n          onDelete={this.handleDelete}\n        />\n      </React.Fragment>\n    )\n  }\n}\nexport default App\n"]},"metadata":{},"sourceType":"module"}