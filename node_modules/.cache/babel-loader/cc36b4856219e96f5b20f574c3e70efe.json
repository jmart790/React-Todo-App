{"ast":null,"code":"var _jsxFileName = \"/Users/josh/Desktop/wyncode/c34/test-react-todomvc/test-react-todomvc/src/App.js\";\nimport React from 'react';\nimport Navbar from './components/navbar';\nimport NewTodo from './components/newTodo';\nimport TodoList from './components/todoList';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todos: []\n    };\n\n    this.handleNewTodo = todo => {\n      if (todo.length > 0 && typeof todo === 'string') {\n        const todos = [...this.state.todos, todo];\n        this.setState({\n          todos\n        });\n      } else {\n        alert('Sorry you cannot enter empty todos');\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }), React.createElement(NewTodo, {\n      onNewTodo: this.handleNewTodo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }), React.createElement(TodoList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/josh/Desktop/wyncode/c34/test-react-todomvc/test-react-todomvc/src/App.js"],"names":["React","Navbar","NewTodo","TodoList","App","Component","state","todos","handleNewTodo","todo","length","setState","alert","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,QAAP,MAAqB,uBAArB;;AAEA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNC,MAAAA,KAAK,EAAE;AADD,KADwB;;AAAA,SAKhCC,aALgC,GAKhBC,IAAI,IAAI;AACtB,UAAIA,IAAI,CAACC,MAAL,GAAc,CAAd,IAAmB,OAAOD,IAAP,KAAgB,QAAvC,EAAiD;AAC/C,cAAMF,KAAK,GAAG,CAAC,GAAG,KAAKD,KAAL,CAAWC,KAAf,EAAsBE,IAAtB,CAAd;AACA,aAAKE,QAAL,CAAc;AAAEJ,UAAAA;AAAF,SAAd;AACD,OAHD,MAGO;AACLK,QAAAA,KAAK,CAAC,oCAAD,CAAL;AACD;AACF,KAZ+B;AAAA;;AAchCC,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAE,KAAKL,aAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF;AAOD;;AAtB+B;;AAwBlC,eAAeJ,GAAf","sourcesContent":["import React from 'react'\nimport Navbar from './components/navbar'\nimport NewTodo from './components/newTodo'\nimport TodoList from './components/todoList'\n\nclass App extends React.Component {\n  state = {\n    todos: []\n  }\n\n  handleNewTodo = todo => {\n    if (todo.length > 0 && typeof todo === 'string') {\n      const todos = [...this.state.todos, todo]\n      this.setState({ todos })\n    } else {\n      alert('Sorry you cannot enter empty todos')\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Navbar />\n        <NewTodo onNewTodo={this.handleNewTodo} />\n        <TodoList />\n      </React.Fragment>\n    )\n  }\n}\nexport default App\n"]},"metadata":{},"sourceType":"module"}