{"ast":null,"code":"var _jsxFileName = \"/Users/josh/Desktop/wyncode/c34/test-react-todomvc/test-react-todomvc/src/components/newTodo.jsx\";\nimport React from 'react';\n\nclass NewTodo extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      text: ''\n    };\n\n    this.handleText = e => {\n      this.setState({\n        text: e.target.value\n      });\n    };\n\n    this.validateTodo = () => {\n      e.preventDefault();\n      const todo = this.state.text;\n      console.log(todo);\n\n      if (todo.length > 0 && !null) {\n        this.props.onNewTodo(todo);\n      } else {\n        alert('Sorry you cannot enter empty to-dos');\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.validateTodo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.text,\n      onChange: this.handleText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"Add to-do\"));\n  }\n\n}\n\nexport default NewTodo;","map":{"version":3,"sources":["/Users/josh/Desktop/wyncode/c34/test-react-todomvc/test-react-todomvc/src/components/newTodo.jsx"],"names":["React","NewTodo","Component","state","text","handleText","e","setState","target","value","validateTodo","preventDefault","todo","console","log","length","props","onNewTodo","alert","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,OAAN,SAAsBD,KAAK,CAACE,SAA5B,CAAsC;AAAA;AAAA;AAAA,SACpCC,KADoC,GAC5B;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAD4B;;AAAA,SAGpCC,UAHoC,GAGvBC,CAAC,IAAI;AAChB,WAAKC,QAAL,CAAc;AAAEH,QAAAA,IAAI,EAAEE,CAAC,CAACE,MAAF,CAASC;AAAjB,OAAd;AACD,KALmC;;AAAA,SAOpCC,YAPoC,GAOrB,MAAM;AACnBJ,MAAAA,CAAC,CAACK,cAAF;AACA,YAAMC,IAAI,GAAG,KAAKT,KAAL,CAAWC,IAAxB;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,UAAIA,IAAI,CAACG,MAAL,GAAc,CAAd,IAAmB,CAAC,IAAxB,EAA8B;AAC5B,aAAKC,KAAL,CAAWC,SAAX,CAAqBL,IAArB;AACD,OAFD,MAEO;AACLM,QAAAA,KAAK,CAAC,qCAAD,CAAL;AACD;AACF,KAhBmC;AAAA;;AAkBpCC,EAAAA,MAAM,GAAG;AACP,WACE;AAAM,MAAA,QAAQ,EAAE,KAAKT,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAE,KAAKP,KAAL,CAAWC,IAArC;AAA2C,MAAA,QAAQ,EAAE,KAAKC,UAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,CADF;AAMD;;AAzBmC;;AA2BtC,eAAeJ,OAAf","sourcesContent":["import React from 'react'\n\nclass NewTodo extends React.Component {\n  state = { text: '' }\n\n  handleText = e => {\n    this.setState({ text: e.target.value })\n  }\n\n  validateTodo = () => {\n    e.preventDefault()\n    const todo = this.state.text\n    console.log(todo)\n    if (todo.length > 0 && !null) {\n      this.props.onNewTodo(todo)\n    } else {\n      alert('Sorry you cannot enter empty to-dos')\n    }\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.validateTodo}>\n        <input type='text' value={this.state.text} onChange={this.handleText} />\n        <button type='submit'>Add to-do</button>\n      </form>\n    )\n  }\n}\nexport default NewTodo\n"]},"metadata":{},"sourceType":"module"}