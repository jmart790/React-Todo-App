{"ast":null,"code":"var _jsxFileName = \"/Users/josh/Desktop/wyncode/c34/test-react-todomvc/test-react-todomvc/src/App.js\";\nimport React from 'react';\nimport Navbar from './components/navbar';\nimport NewTodo from './components/newTodo';\nimport TodoList from './components/todoList';\nimport './styles/app.css';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todos: [],\n      count: 0\n    };\n\n    this.handleCount = () => {\n      const count = this.state.todos.filter(todo => !todo.completed);\n      this.setState({\n        count\n      });\n    };\n\n    this.handleDelete = todoId => {\n      let todos = this.state.todos;\n      todos.splice(todoId, 1);\n      this.setState({\n        todos\n      });\n    };\n\n    this.handleCompleted = todoId => {\n      let todos = this.state.todos;\n      todos[todoId].completed = !todos[todoId].completed;\n      this.setState({\n        todos\n      });\n    };\n\n    this.handleNewTodo = todo => {\n      const todos = [...this.state.todos, todo];\n      this.setState({\n        todos\n      });\n      console.log(todos);\n    };\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(NewTodo, {\n      onNewTodo: this.handleNewTodo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(TodoList, {\n      todoList: this.state.todos,\n      onCompleted: this.handleCompleted,\n      onDelete: this.handleDelete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/josh/Desktop/wyncode/c34/test-react-todomvc/test-react-todomvc/src/App.js"],"names":["React","Navbar","NewTodo","TodoList","App","Component","state","todos","count","handleCount","filter","todo","completed","setState","handleDelete","todoId","splice","handleCompleted","handleNewTodo","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAO,kBAAP;;AAEA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,KAAK,EAAE;AAFD,KADwB;;AAAA,SAMhCC,WANgC,GAMlB,MAAM;AAClB,YAAMD,KAAK,GAAG,KAAKF,KAAL,CAAWC,KAAX,CAAiBG,MAAjB,CAAwBC,IAAI,IAAI,CAACA,IAAI,CAACC,SAAtC,CAAd;AACA,WAAKC,QAAL,CAAc;AAAEL,QAAAA;AAAF,OAAd;AACD,KAT+B;;AAAA,SAWhCM,YAXgC,GAWjBC,MAAM,IAAI;AACvB,UAAIR,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAvB;AACAA,MAAAA,KAAK,CAACS,MAAN,CAAaD,MAAb,EAAqB,CAArB;AACA,WAAKF,QAAL,CAAc;AAAEN,QAAAA;AAAF,OAAd;AACD,KAf+B;;AAAA,SAiBhCU,eAjBgC,GAiBdF,MAAM,IAAI;AAC1B,UAAIR,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAvB;AACAA,MAAAA,KAAK,CAACQ,MAAD,CAAL,CAAcH,SAAd,GAA0B,CAACL,KAAK,CAACQ,MAAD,CAAL,CAAcH,SAAzC;AACA,WAAKC,QAAL,CAAc;AAAEN,QAAAA;AAAF,OAAd;AACD,KArB+B;;AAAA,SAuBhCW,aAvBgC,GAuBhBP,IAAI,IAAI;AACtB,YAAMJ,KAAK,GAAG,CAAC,GAAG,KAAKD,KAAL,CAAWC,KAAf,EAAsBI,IAAtB,CAAd;AACA,WAAKE,QAAL,CAAc;AAAEN,QAAAA;AAAF,OAAd;AACAY,MAAAA,OAAO,CAACC,GAAR,CAAYb,KAAZ;AACD,KA3B+B;AAAA;;AA6BhCc,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAE,KAAKH,aAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,QAAD;AACE,MAAA,QAAQ,EAAE,KAAKZ,KAAL,CAAWC,KADvB;AAEE,MAAA,WAAW,EAAE,KAAKU,eAFpB;AAGE,MAAA,QAAQ,EAAE,KAAKH,YAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF;AAWD;;AAzC+B;;AA2ClC,eAAeV,GAAf","sourcesContent":["import React from 'react'\nimport Navbar from './components/navbar'\nimport NewTodo from './components/newTodo'\nimport TodoList from './components/todoList'\nimport './styles/app.css'\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    count: 0\n  }\n\n  handleCount = () => {\n    const count = this.state.todos.filter(todo => !todo.completed)\n    this.setState({ count })\n  }\n\n  handleDelete = todoId => {\n    let todos = this.state.todos\n    todos.splice(todoId, 1)\n    this.setState({ todos })\n  }\n\n  handleCompleted = todoId => {\n    let todos = this.state.todos\n    todos[todoId].completed = !todos[todoId].completed\n    this.setState({ todos })\n  }\n\n  handleNewTodo = todo => {\n    const todos = [...this.state.todos, todo]\n    this.setState({ todos })\n    console.log(todos)\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Navbar />\n        <NewTodo onNewTodo={this.handleNewTodo} />\n        <TodoList\n          todoList={this.state.todos}\n          onCompleted={this.handleCompleted}\n          onDelete={this.handleDelete}\n        />\n      </React.Fragment>\n    )\n  }\n}\nexport default App\n"]},"metadata":{},"sourceType":"module"}